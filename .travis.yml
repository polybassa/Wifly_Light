# use new docker environment
sudo: required

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - build-essential
      - git
      - libc6-i386
      - g++-5
      - gcc-5
      - gperf
      - cppcheck
      - wine
      - freeglut3-dev
      - unrar-free
      - libtool
      - texinfo
      - gawk
      - ncurses-dev
      - libexpat-dev
      - python-dev
      - python
      - python-serial
      - sed
      - unzip
      - help2man
      - wget
      - bzip2

# We use cpp for unit tests, and c for the main project.
language: cpp
compiler:
      - gcc

before_install:
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 90
    - curl --retry 10 --retry-max-time 120 -L "https://launchpad.net/gcc-arm-embedded/5.0/5-2015-q4-major/+download/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2" | tar xfj -
    - wget -nc -O cc8e.zip http://www.bknd.com/cc8efree.zip
    - unzip -d cc8e cc8e.zip
    - tools/install_esp_toolchain.sh

install:
    - export PATH=$PATH:$PWD/gcc-arm-none-eabi-5_2-2015q4/bin
    - export PATH=$PATH:$PWD/cc8e

before_script:
        - arm-none-eabi-gcc --version
        - gcc --version

script:
        - ./configure
        - make test
        - make clean
        - make firmware_pic
        - make clean
        - make cli
        - make clean
        - make firmware_simu
        - make firmware_raspi
